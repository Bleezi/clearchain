// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/tendermint/clearchain/types (interfaces: Tx,TxExecutor)

package mock_tx

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Tx interface
type MockTx struct {
	ctrl     *gomock.Controller
	recorder *_MockTxRecorder
}

// Recorder for MockTx (not exported)
type _MockTxRecorder struct {
	mock *MockTx
}

func NewMockTx(ctrl *gomock.Controller) *MockTx {
	mock := &MockTx{ctrl: ctrl}
	mock.recorder = &_MockTxRecorder{mock}
	return mock
}

func (_m *MockTx) EXPECT() *_MockTxRecorder {
	return _m.recorder
}

func (_m *MockTx) SignBytes(_param0 string) []byte {
	ret := _m.ctrl.Call(_m, "SignBytes", _param0)
	ret0, _ := ret[0].([]byte)
	return ret0
}

func (_mr *_MockTxRecorder) SignBytes(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SignBytes", arg0)
}

func (_m *MockTx) TxType() byte {
	ret := _m.ctrl.Call(_m, "TxType")
	ret0, _ := ret[0].(byte)
	return ret0
}

func (_mr *_MockTxRecorder) TxType() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "TxType")
}

// Mock of TxExecutor interface
type MockTxExecutor struct {
	ctrl     *gomock.Controller
	recorder *_MockTxExecutorRecorder
}

// Recorder for MockTxExecutor (not exported)
type _MockTxExecutorRecorder struct {
	mock *MockTxExecutor
}

func NewMockTxExecutor(ctrl *gomock.Controller) *MockTxExecutor {
	mock := &MockTxExecutor{ctrl: ctrl}
	mock.recorder = &_MockTxExecutorRecorder{mock}
	return mock
}

func (_m *MockTxExecutor) EXPECT() *_MockTxExecutorRecorder {
	return _m.recorder
}

func (_m *MockTxExecutor) CanExecTx(_param0 byte) bool {
	ret := _m.ctrl.Call(_m, "CanExecTx", _param0)
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockTxExecutorRecorder) CanExecTx(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CanExecTx", arg0)
}
