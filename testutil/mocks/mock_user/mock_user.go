// Automatically generated by MockGen. DO NOT EDIT!
// Source: ../types/user.go

package mock_user

import (
	gomock "github.com/golang/mock/gomock"
	types "github.com/tendermint/clearchain/types"
)

// Mock of UserGetter interface
type MockUserGetter struct {
	ctrl     *gomock.Controller
	recorder *_MockUserGetterRecorder
}

// Recorder for MockUserGetter (not exported)
type _MockUserGetterRecorder struct {
	mock *MockUserGetter
}

func NewMockUserGetter(ctrl *gomock.Controller) *MockUserGetter {
	mock := &MockUserGetter{ctrl: ctrl}
	mock.recorder = &_MockUserGetterRecorder{mock}
	return mock
}

func (_m *MockUserGetter) EXPECT() *_MockUserGetterRecorder {
	return _m.recorder
}

func (_m *MockUserGetter) GetUser(addr []byte) *types.User {
	ret := _m.ctrl.Call(_m, "GetUser", addr)
	ret0, _ := ret[0].(*types.User)
	return ret0
}

func (_mr *_MockUserGetterRecorder) GetUser(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetUser", arg0)
}

// Mock of UserSetter interface
type MockUserSetter struct {
	ctrl     *gomock.Controller
	recorder *_MockUserSetterRecorder
}

// Recorder for MockUserSetter (not exported)
type _MockUserSetterRecorder struct {
	mock *MockUserSetter
}

func NewMockUserSetter(ctrl *gomock.Controller) *MockUserSetter {
	mock := &MockUserSetter{ctrl: ctrl}
	mock.recorder = &_MockUserSetterRecorder{mock}
	return mock
}

func (_m *MockUserSetter) EXPECT() *_MockUserSetterRecorder {
	return _m.recorder
}

func (_m *MockUserSetter) SetUser(addr []byte, acc *types.User) {
	_m.ctrl.Call(_m, "SetUser", addr, acc)
}

func (_mr *_MockUserSetterRecorder) SetUser(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetUser", arg0, arg1)
}

// Mock of UserGetterSetter interface
type MockUserGetterSetter struct {
	ctrl     *gomock.Controller
	recorder *_MockUserGetterSetterRecorder
}

// Recorder for MockUserGetterSetter (not exported)
type _MockUserGetterSetterRecorder struct {
	mock *MockUserGetterSetter
}

func NewMockUserGetterSetter(ctrl *gomock.Controller) *MockUserGetterSetter {
	mock := &MockUserGetterSetter{ctrl: ctrl}
	mock.recorder = &_MockUserGetterSetterRecorder{mock}
	return mock
}

func (_m *MockUserGetterSetter) EXPECT() *_MockUserGetterSetterRecorder {
	return _m.recorder
}

func (_m *MockUserGetterSetter) GetUser(addr []byte) *types.User {
	ret := _m.ctrl.Call(_m, "GetUser", addr)
	ret0, _ := ret[0].(*types.User)
	return ret0
}

func (_mr *_MockUserGetterSetterRecorder) GetUser(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetUser", arg0)
}

func (_m *MockUserGetterSetter) SetUser(addr []byte, acc *types.User) {
	_m.ctrl.Call(_m, "SetUser", addr, acc)
}

func (_mr *_MockUserGetterSetterRecorder) SetUser(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetUser", arg0, arg1)
}
