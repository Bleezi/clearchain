// Automatically generated by MockGen. DO NOT EDIT!
// Source: types/entity.go

package mock_entity

import (
	types "github.com/tendermint/clearchain/types"
	gomock "github.com/golang/mock/gomock"
)

// Mock of LegalEntityGetter interface
type MockLegalEntityGetter struct {
	ctrl     *gomock.Controller
	recorder *_MockLegalEntityGetterRecorder
}

// Recorder for MockLegalEntityGetter (not exported)
type _MockLegalEntityGetterRecorder struct {
	mock *MockLegalEntityGetter
}

func NewMockLegalEntityGetter(ctrl *gomock.Controller) *MockLegalEntityGetter {
	mock := &MockLegalEntityGetter{ctrl: ctrl}
	mock.recorder = &_MockLegalEntityGetterRecorder{mock}
	return mock
}

func (_m *MockLegalEntityGetter) EXPECT() *_MockLegalEntityGetterRecorder {
	return _m.recorder
}

func (_m *MockLegalEntityGetter) GetLegalEntity(id string) *types.LegalEntity {
	ret := _m.ctrl.Call(_m, "GetLegalEntity", id)
	ret0, _ := ret[0].(*types.LegalEntity)
	return ret0
}

func (_mr *_MockLegalEntityGetterRecorder) GetLegalEntity(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLegalEntity", arg0)
}

// Mock of LegalEntitySetter interface
type MockLegalEntitySetter struct {
	ctrl     *gomock.Controller
	recorder *_MockLegalEntitySetterRecorder
}

// Recorder for MockLegalEntitySetter (not exported)
type _MockLegalEntitySetterRecorder struct {
	mock *MockLegalEntitySetter
}

func NewMockLegalEntitySetter(ctrl *gomock.Controller) *MockLegalEntitySetter {
	mock := &MockLegalEntitySetter{ctrl: ctrl}
	mock.recorder = &_MockLegalEntitySetterRecorder{mock}
	return mock
}

func (_m *MockLegalEntitySetter) EXPECT() *_MockLegalEntitySetterRecorder {
	return _m.recorder
}

func (_m *MockLegalEntitySetter) SetLegalEntity(id string, acc *types.LegalEntity) {
	_m.ctrl.Call(_m, "SetLegalEntity", id, acc)
}

func (_mr *_MockLegalEntitySetterRecorder) SetLegalEntity(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetLegalEntity", arg0, arg1)
}

// Mock of LegalEntityGetterSetter interface
type MockLegalEntityGetterSetter struct {
	ctrl     *gomock.Controller
	recorder *_MockLegalEntityGetterSetterRecorder
}

// Recorder for MockLegalEntityGetterSetter (not exported)
type _MockLegalEntityGetterSetterRecorder struct {
	mock *MockLegalEntityGetterSetter
}

func NewMockLegalEntityGetterSetter(ctrl *gomock.Controller) *MockLegalEntityGetterSetter {
	mock := &MockLegalEntityGetterSetter{ctrl: ctrl}
	mock.recorder = &_MockLegalEntityGetterSetterRecorder{mock}
	return mock
}

func (_m *MockLegalEntityGetterSetter) EXPECT() *_MockLegalEntityGetterSetterRecorder {
	return _m.recorder
}

func (_m *MockLegalEntityGetterSetter) GetLegalEntity(id string) *types.LegalEntity {
	ret := _m.ctrl.Call(_m, "GetLegalEntity", id)
	ret0, _ := ret[0].(*types.LegalEntity)
	return ret0
}

func (_mr *_MockLegalEntityGetterSetterRecorder) GetLegalEntity(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLegalEntity", arg0)
}

func (_m *MockLegalEntityGetterSetter) SetLegalEntity(id string, acc *types.LegalEntity) {
	_m.ctrl.Call(_m, "SetLegalEntity", id, acc)
}

func (_mr *_MockLegalEntityGetterSetterRecorder) SetLegalEntity(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetLegalEntity", arg0, arg1)
}
